<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop.xsd
                    http://www.springframework.org/schema/mvc
                    http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 配置包扫描，扫描controller -->
	<context:component-scan base-package="com.lolaage.controller" />
	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<mvc:annotation-driven validator="validator" />
	<!-- 启动spring MVC注解功能,完成请求和注解的POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>
	<!-- 避免IE执行AJAX时 ，返回JSON出现下载文件 -->
	<!-- json日期转换器 @JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone = "GMT+8") -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 对模型视图名称的解析,即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/pages/" p:suffix=".jsp" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="32505856" /><!-- 上传文件大小限制为31*1024*1024 -->
		<property name="maxInMemorySize" value="4096" />
	</bean>
	
	
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties 
		<property name="validationMessageSource" ref="messageSource" />-->
	</bean>
	
	
	
	<!--针对freemarker的视图配置 <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"> 
		<property name="templateLoaderPath" value="/pages/" /> <property name="freemarkerSettings"> 
		<props> <prop key="template_update_delay">0</prop> <prop key="default_encoding">UTF-8</prop> 
		<prop key="locale">zh_CN</prop> <prop key="number_format">#.##</prop> <prop 
		key="datetime_format">yyyy-MM-dd HH:mm:ss</prop> <prop key="date_format">yyyy-MM-dd</prop> 
		<prop key="classic_compatible">true</prop> <prop key="template_exception_handler">ignore</prop> 
		</props> </property> </bean> -->
	<!--视图解释器 <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"> 
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" 
		/> <property name="cache" value="true" /> <property name="prefix" value="/" 
		/> <property name="suffix" value=".html" /> <property name="contentType" 
		value="text/html;charset=UTF-8"></property> <property name="exposeSpringMacroHelpers" 
		value="true" /> <property name="exposeRequestAttributes" value="true" /> 
		<property name="exposeSessionAttributes" value="true" /> 此变量值为pageContext.request, 
		页面使用方法：rc.contextPath <property name="requestContextAttribute" value="rc" 
		/> </bean> -->
</beans>